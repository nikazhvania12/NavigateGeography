{"ast":null,"code":"import{useEffect,useState}from\"react\";import GetCountriesFilter from\"../../Controllers/Countries/GetCountriesFilter\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FilterCountryDropdown(_ref){let{isVisible,setVisible,filterCountryName,setViewCountries,setFilterCountryName,SetError}=_ref;const[DropdownCountries,setDropDownCountries]=useState([]);useEffect(()=>{const fetchCountries=async()=>{if(filterCountryName!==''){const countries=await GetCountriesFilter(SetError,filterCountryName);setDropDownCountries(countries);}else{setDropDownCountries([]);}};fetchCountries();},[filterCountryName,SetError]);const handleCountrySelect=country=>{setVisible(false);setViewCountries([country]);setFilterCountryName(country.name);};return isVisible&&/*#__PURE__*/_jsx(\"div\",{className:\"filter-dropdown\",children:DropdownCountries&&DropdownCountries.map((country,index)=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-country\",onClick:()=>handleCountrySelect(country),children:[/*#__PURE__*/_jsx(\"img\",{src:country.additional_info.flag_path,alt:\"country_flag\",className:\"dropdown-flag\"}),\"\\u00A0\",\"\\u00A0\",\"\\u00A0\",\"\\u00A0\",/*#__PURE__*/_jsx(\"h5\",{children:country.name})]},index);})});}export default FilterCountryDropdown;","map":{"version":3,"names":["useEffect","useState","GetCountriesFilter","jsx","_jsx","jsxs","_jsxs","FilterCountryDropdown","_ref","isVisible","setVisible","filterCountryName","setViewCountries","setFilterCountryName","SetError","DropdownCountries","setDropDownCountries","fetchCountries","countries","handleCountrySelect","country","name","className","children","map","index","onClick","src","additional_info","flag_path","alt"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/Components/HelperComponents/FitlerCountryDropdown.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport GetCountriesFilter from \"../../Controllers/Countries/GetCountriesFilter\"\r\n\r\n\r\nfunction FilterCountryDropdown({ isVisible, setVisible, filterCountryName, setViewCountries, setFilterCountryName, SetError }) {\r\n\r\n    const [DropdownCountries, setDropDownCountries] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async () => {\r\n\r\n            if(filterCountryName !== '') {\r\n                const countries = await GetCountriesFilter(SetError, filterCountryName);\r\n                setDropDownCountries(countries);\r\n            }\r\n            else {\r\n                setDropDownCountries([]);\r\n            }\r\n        };\r\n      \r\n        fetchCountries();\r\n      }, [filterCountryName, SetError]);\r\n\r\n    const handleCountrySelect = (country) => {\r\n        setVisible(false);\r\n        setViewCountries([country]);\r\n        setFilterCountryName(country.name);\r\n    }\r\n\r\n    return (\r\n        isVisible &&\r\n            <div className=\"filter-dropdown\">\r\n                {DropdownCountries && DropdownCountries.map((country, index) => {\r\n                return (\r\n                    <div className=\"dropdown-country\" key={index} onClick={() => handleCountrySelect(country) }>\r\n                        <img src={country.additional_info.flag_path} alt='country_flag' className=\"dropdown-flag\" />\r\n                        {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        <h5>{country.name}</h5>\r\n                    </div>\r\n                )})}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default FilterCountryDropdown;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,kBAAkB,KAAM,gDAAgD,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG/E,QAAS,CAAAC,qBAAqBA,CAAAC,IAAA,CAAiG,IAAhG,CAAEC,SAAS,CAAEC,UAAU,CAAEC,iBAAiB,CAAEC,gBAAgB,CAAEC,oBAAoB,CAAEC,QAAS,CAAC,CAAAN,IAAA,CAEzH,KAAM,CAACO,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAG9DD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAiB,cAAc,CAAG,KAAAA,CAAA,GAAY,CAE/B,GAAGN,iBAAiB,GAAK,EAAE,CAAE,CACzB,KAAM,CAAAO,SAAS,CAAG,KAAM,CAAAhB,kBAAkB,CAACY,QAAQ,CAAEH,iBAAiB,CAAC,CACvEK,oBAAoB,CAACE,SAAS,CAAC,CACnC,CAAC,IACI,CACDF,oBAAoB,CAAC,EAAE,CAAC,CAC5B,CACJ,CAAC,CAEDC,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACN,iBAAiB,CAAEG,QAAQ,CAAC,CAAC,CAEnC,KAAM,CAAAK,mBAAmB,CAAIC,OAAO,EAAK,CACrCV,UAAU,CAAC,KAAK,CAAC,CACjBE,gBAAgB,CAAC,CAACQ,OAAO,CAAC,CAAC,CAC3BP,oBAAoB,CAACO,OAAO,CAACC,IAAI,CAAC,CACtC,CAAC,CAED,MACI,CAAAZ,SAAS,eACLL,IAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC3BR,iBAAiB,EAAIA,iBAAiB,CAACS,GAAG,CAAC,CAACJ,OAAO,CAAEK,KAAK,GAAK,CAChE,mBACInB,KAAA,QAAKgB,SAAS,CAAC,kBAAkB,CAAaI,OAAO,CAAEA,CAAA,GAAMP,mBAAmB,CAACC,OAAO,CAAG,CAAAG,QAAA,eACvFnB,IAAA,QAAKuB,GAAG,CAAEP,OAAO,CAACQ,eAAe,CAACC,SAAU,CAACC,GAAG,CAAC,cAAc,CAACR,SAAS,CAAC,eAAe,CAAE,CAAC,CAC3F,QAAQ,CACR,QAAQ,CACR,QAAQ,CACR,QAAQ,cACTlB,IAAA,OAAAmB,QAAA,CAAKH,OAAO,CAACC,IAAI,CAAK,CAAC,GANYI,KAOlC,CAAC,CACT,CAAC,CAAC,CACF,CAAC,CAElB,CAEA,cAAe,CAAAlB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}