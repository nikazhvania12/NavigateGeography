{"ast":null,"code":"import PackageJSON from'../../../package.json';async function UpdateCountry(country,SetError){var url='';if(PackageJSON.API.DebugMode)url=PackageJSON.API.BaseURLDebug+PackageJSON.API.UpdateCountry;else url=PackageJSON.API.BaseURLProd+PackageJSON.API.UpdateCountry;const jsonData=JSON.stringify(country);try{const resp=await fetch(url,{method:\"PUT\",headers:{'Content-Type':'application/json'},credentials:'include',body:jsonData});const jsonResp=await resp.json();if(resp.status===400&&jsonResp!==null&&jsonResp.Error!==null){SetError(jsonResp.Error);}if(!resp.ok)return false;return true;}catch(e){return false;}}export default UpdateCountry;","map":{"version":3,"names":["PackageJSON","UpdateCountry","country","SetError","url","API","DebugMode","BaseURLDebug","BaseURLProd","jsonData","JSON","stringify","resp","fetch","method","headers","credentials","body","jsonResp","json","status","Error","ok","e"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/Controllers/Countries/UpdateCountry.jsx"],"sourcesContent":["import PackageJSON from '../../../package.json';\r\n\r\nasync function UpdateCountry(country, SetError) {\r\n    var url = '';\r\n    if(PackageJSON.API.DebugMode)\r\n        url = PackageJSON.API.BaseURLDebug + PackageJSON.API.UpdateCountry;\r\n    else \r\n        url = PackageJSON.API.BaseURLProd + PackageJSON.API.UpdateCountry;\r\n\r\n    const jsonData = JSON.stringify(country);\r\n\r\n    try {\r\n        const resp = await fetch(url, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: jsonData\r\n        })\r\n    \r\n        const jsonResp = await resp.json();\r\n    \r\n        if(resp.status === 400 && jsonResp !== null && jsonResp.Error !== null) {\r\n            SetError(jsonResp.Error);\r\n        }\r\n    \r\n        if(!resp.ok) \r\n            return false;\r\n    \r\n        return true;\r\n    }\r\n    catch(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default UpdateCountry;"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,uBAAuB,CAE/C,cAAe,CAAAC,aAAaA,CAACC,OAAO,CAAEC,QAAQ,CAAE,CAC5C,GAAI,CAAAC,GAAG,CAAG,EAAE,CACZ,GAAGJ,WAAW,CAACK,GAAG,CAACC,SAAS,CACxBF,GAAG,CAAGJ,WAAW,CAACK,GAAG,CAACE,YAAY,CAAGP,WAAW,CAACK,GAAG,CAACJ,aAAa,CAAC,IAEnE,CAAAG,GAAG,CAAGJ,WAAW,CAACK,GAAG,CAACG,WAAW,CAAGR,WAAW,CAACK,GAAG,CAACJ,aAAa,CAErE,KAAM,CAAAQ,QAAQ,CAAGC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,CAExC,GAAI,CACA,KAAM,CAAAU,IAAI,CAAG,KAAM,CAAAC,KAAK,CAACT,GAAG,CAAE,CAC1BU,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,WAAW,CAAE,SAAS,CACtBC,IAAI,CAAER,QACV,CAAC,CAAC,CAEF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAN,IAAI,CAACO,IAAI,CAAC,CAAC,CAElC,GAAGP,IAAI,CAACQ,MAAM,GAAK,GAAG,EAAIF,QAAQ,GAAK,IAAI,EAAIA,QAAQ,CAACG,KAAK,GAAK,IAAI,CAAE,CACpElB,QAAQ,CAACe,QAAQ,CAACG,KAAK,CAAC,CAC5B,CAEA,GAAG,CAACT,IAAI,CAACU,EAAE,CACP,MAAO,MAAK,CAEhB,MAAO,KAAI,CACf,CACA,MAAMC,CAAC,CAAE,CACL,MAAO,MAAK,CAChB,CACJ,CAEA,cAAe,CAAAtB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}