{"ast":null,"code":"import PackageJSON from '../../../package.json';\nasync function LoginUser(email, password, setError) {\n  const url = PackageJSON.API.BaseURL + PackageJSON.API.Login;\n  const model = {\n    email: email,\n    password: password\n  };\n  const modelJson = JSON.stringify(model);\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: modelJson\n    });\n    const json = await response.json();\n    if (response.status === 400 && response.json() && response.json().error) setError(response.json().error);\n    if (!response.ok) return [];\n    return response.json();\n  } catch (e) {\n    console.log(e);\n    return [];\n  }\n}\n_c = LoginUser;\nexport default LoginUser;\nvar _c;\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"names":["PackageJSON","LoginUser","email","password","setError","url","API","BaseURL","Login","model","modelJson","JSON","stringify","response","fetch","method","headers","credentials","body","json","status","error","ok","e","console","log","_c","$RefreshReg$"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/Controllers/Users/LoginUser.jsx"],"sourcesContent":["import PackageJSON from '../../../package.json'\r\n\r\nasync function LoginUser(email, password, setError) {\r\n    const url = PackageJSON.API.BaseURL + PackageJSON.API.Login;\r\n    const model = {\r\n        email: email,\r\n        password: password\r\n    }\r\n    const modelJson = JSON.stringify(model);\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: modelJson\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if(response.status === 400 && response.json() && response.json().error)\r\n            setError(response.json().error)\r\n    \r\n        if(!response.ok)\r\n            return [];\r\n    \r\n        return response.json();\r\n    }\r\n    catch(e) {\r\n        console.log(e);\r\n        return [];\r\n    }\r\n\r\n}\r\n\r\nexport default LoginUser;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,uBAAuB;AAE/C,eAAeC,SAASA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAChD,MAAMC,GAAG,GAAGL,WAAW,CAACM,GAAG,CAACC,OAAO,GAAGP,WAAW,CAACM,GAAG,CAACE,KAAK;EAC3D,MAAMC,KAAK,GAAG;IACVP,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACd,CAAC;EACD,MAAMO,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;EAEvC,IAAI;IACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAE;MAC9BU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAER;IACV,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;IAElC,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,IAAIP,QAAQ,CAACM,IAAI,CAAC,CAAC,IAAIN,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACE,KAAK,EAClEjB,QAAQ,CAACS,QAAQ,CAACM,IAAI,CAAC,CAAC,CAACE,KAAK,CAAC;IAEnC,IAAG,CAACR,QAAQ,CAACS,EAAE,EACX,OAAO,EAAE;IAEb,OAAOT,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC1B,CAAC,CACD,OAAMI,CAAC,EAAE;IACLC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,OAAO,EAAE;EACb;AAEJ;AAACG,EAAA,GAjCczB,SAAS;AAmCxB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}