{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nzhvania\\\\Desktop\\\\navigate-geography\\\\src\\\\Components\\\\HelperComponents\\\\FitlerCountryDropdown.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport GetCountriesFilter from \"../../Controllers/Countries/GetCountriesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterCountryDropdown({\n  isVisible,\n  filterCountryName\n}) {\n  _s();\n  const [DropdownCountries, setDropDownCountries] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      if (filterCountryName !== '') {\n        const countries = await GetCountriesFilter(filterCountryName);\n        setDropDownCountries(countries);\n      } else {\n        setDropDownCountries([]);\n      }\n    };\n    fetchCountries();\n  }, [filterCountryName]);\n  return isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-dropdown\",\n    children: DropdownCountries && DropdownCountries.map((country, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-country\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.additional_info.flag_path,\n          className: \"dropdown-flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), \"\\u00A0\", \"\\u00A0\", \"\\u00A0\", \"\\u00A0\", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n}\n_s(FilterCountryDropdown, \"WmFne66MYL0zVzwxkJtAmbV0s8I=\");\n_c = FilterCountryDropdown;\nexport default FilterCountryDropdown;\nvar _c;\n$RefreshReg$(_c, \"FilterCountryDropdown\");","map":{"version":3,"names":["useEffect","useState","GetCountriesFilter","jsxDEV","_jsxDEV","FilterCountryDropdown","isVisible","filterCountryName","_s","DropdownCountries","setDropDownCountries","fetchCountries","countries","className","children","map","country","index","src","additional_info","flag_path","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/Components/HelperComponents/FitlerCountryDropdown.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport GetCountriesFilter from \"../../Controllers/Countries/GetCountriesFilter\"\r\n\r\n\r\nfunction FilterCountryDropdown({isVisible, filterCountryName}) {\r\n\r\n    const [DropdownCountries, setDropDownCountries] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async () => {\r\n\r\n            if(filterCountryName !== '') {\r\n                const countries = await GetCountriesFilter(filterCountryName);\r\n                setDropDownCountries(countries);\r\n            }\r\n            else {\r\n                setDropDownCountries([]);\r\n            }\r\n        };\r\n      \r\n        fetchCountries();\r\n      }, [filterCountryName]);\r\n\r\n    return (\r\n        isVisible &&\r\n            <div className=\"filter-dropdown\">\r\n                {DropdownCountries && DropdownCountries.map((country, index) => {\r\n                return (\r\n                    <div className=\"dropdown-country\" key={index}>\r\n                        <img src={country.additional_info.flag_path} className=\"dropdown-flag\" />\r\n                        {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        <h5>{country.name}</h5>\r\n                    </div>\r\n                )})}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default FilterCountryDropdown;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAM,gDAAgD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/E,SAASC,qBAAqBA,CAAC;EAACC,SAAS;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAE3D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAG9DD,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MAE/B,IAAGJ,iBAAiB,KAAK,EAAE,EAAE;QACzB,MAAMK,SAAS,GAAG,MAAMV,kBAAkB,CAACK,iBAAiB,CAAC;QAC7DG,oBAAoB,CAACE,SAAS,CAAC;MACnC,CAAC,MACI;QACDF,oBAAoB,CAAC,EAAE,CAAC;MAC5B;IACJ,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,iBAAiB,CAAC,CAAC;EAEzB,OACID,SAAS,iBACLF,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC3BL,iBAAiB,IAAIA,iBAAiB,CAACM,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAChE,oBACIb,OAAA;QAAKS,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BV,OAAA;UAAKc,GAAG,EAAEF,OAAO,CAACG,eAAe,CAACC,SAAU;UAACP,SAAS,EAAC;QAAe;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACxE,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,QAAQ,eACTpB,OAAA;UAAAU,QAAA,EAAKE,OAAO,CAACS;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GANYP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOvC,CAAC;IACT,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB;AAAChB,EAAA,CApCQH,qBAAqB;AAAAqB,EAAA,GAArBrB,qBAAqB;AAsC9B,eAAeA,qBAAqB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}