{"ast":null,"code":"import'./App.css';import'bootstrap/dist/css/bootstrap.min.css';import\"bootstrap-icons/font/bootstrap-icons.css\";import{BrowserRouter,Route,Routes}from'react-router-dom';import Header from'./Components/HelperComponents/Header';import Home from'./Components/RouteComponents/Home';import Login from'./Components/RouteComponents/Login';import Error from'./Components/HelperComponents/Error';import FullSizeMap from'./Components/HelperComponents/FullSizeMap';import{useEffect,useState}from'react';import GetCurrentUser from'./Controllers/Users/GetCurrentUser';import Manage from'./Components/RouteComponents/Manage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[viewCountries,setViewCountries]=useState(null);const[isFullSizeMapVisible,SetIsFullSizeMapVisible]=useState(false);const[currentUser,setCurrentUser]=useState(null);const[error,setError]=useState('');async function GetUser(){const user=await GetCurrentUser(setError);if(user&&user.id!==-1)setCurrentUser(user);}useEffect(()=>{GetUser();},[]);return/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(FullSizeMap,{isVisible:isFullSizeMapVisible,setIsVisible:SetIsFullSizeMapVisible,selectedCountries:viewCountries}),/*#__PURE__*/_jsx(Header,{currentUser:currentUser,setCurrentUser:setCurrentUser}),/*#__PURE__*/_jsx(Error,{message:error}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{element:/*#__PURE__*/_jsx(Home,{SetError:setError,viewCountries:viewCountries,setViewCountries:setViewCountries,SetIsFullSizeMapVisible:SetIsFullSizeMapVisible}),path:\"/\"}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{SetError:setError,setCurrentUser:setCurrentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/manage\",element:/*#__PURE__*/_jsx(Manage,{currentUser:currentUser,SetError:setError})})]})]});}export default App;","map":{"version":3,"names":["BrowserRouter","Route","Routes","Header","Home","Login","Error","FullSizeMap","useEffect","useState","GetCurrentUser","Manage","jsx","_jsx","jsxs","_jsxs","App","viewCountries","setViewCountries","isFullSizeMapVisible","SetIsFullSizeMapVisible","currentUser","setCurrentUser","error","setError","GetUser","user","id","children","isVisible","setIsVisible","selectedCountries","message","element","SetError","path"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'; \nimport Header from './Components/HelperComponents/Header';\nimport Home from './Components/RouteComponents/Home';\nimport Login from './Components/RouteComponents/Login';\nimport Error from './Components/HelperComponents/Error';\nimport FullSizeMap from './Components/HelperComponents/FullSizeMap'\n\nimport { useEffect, useState } from 'react';\nimport GetCurrentUser from './Controllers/Users/GetCurrentUser';\nimport Manage from './Components/RouteComponents/Manage';\n\nfunction App() {\n\n  const [viewCountries, setViewCountries] = useState(null);\n  const [isFullSizeMapVisible, SetIsFullSizeMapVisible] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [error, setError] = useState('');\n\n  async function GetUser() {\n      const user = await GetCurrentUser(setError);\n      if(user && user.id !== -1)\n        setCurrentUser(user);\n  }\n\n  useEffect(() => {\n    GetUser();\n  }, [])\n  \n  return (\n    <BrowserRouter>\n      <FullSizeMap isVisible={isFullSizeMapVisible} setIsVisible={SetIsFullSizeMapVisible} selectedCountries={viewCountries} />\n        <Header currentUser={currentUser} setCurrentUser={setCurrentUser} />\n        <Error message={error} />\n        <Routes>\n            <Route element={\n            <Home SetError={setError}\n            viewCountries={viewCountries} setViewCountries={setViewCountries} SetIsFullSizeMapVisible={SetIsFullSizeMapVisible} \n            />} path='/'/>\n            <Route path='/login' element={<Login SetError={setError} setCurrentUser={setCurrentUser} />} />\n            <Route path='/manage' element={<Manage currentUser={currentUser} SetError={setError} />} />\n        </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,MAAO,sCAAsC,CAC7C,MAAO,0CAA0C,CAEjD,OAASA,aAAa,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAC/D,MAAO,CAAAC,MAAM,KAAM,sCAAsC,CACzD,MAAO,CAAAC,IAAI,KAAM,mCAAmC,CACpD,MAAO,CAAAC,KAAK,KAAM,oCAAoC,CACtD,MAAO,CAAAC,KAAK,KAAM,qCAAqC,CACvD,MAAO,CAAAC,WAAW,KAAM,2CAA2C,CAEnE,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,cAAc,KAAM,oCAAoC,CAC/D,MAAO,CAAAC,MAAM,KAAM,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACU,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACvE,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEtC,cAAe,CAAAgB,OAAOA,CAAA,CAAG,CACrB,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAhB,cAAc,CAACc,QAAQ,CAAC,CAC3C,GAAGE,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAK,CAAC,CAAC,CACvBL,cAAc,CAACI,IAAI,CAAC,CAC1B,CAEAlB,SAAS,CAAC,IAAM,CACdiB,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,KAAA,CAACf,aAAa,EAAA4B,QAAA,eACZf,IAAA,CAACN,WAAW,EAACsB,SAAS,CAAEV,oBAAqB,CAACW,YAAY,CAAEV,uBAAwB,CAACW,iBAAiB,CAAEd,aAAc,CAAE,CAAC,cACvHJ,IAAA,CAACV,MAAM,EAACkB,WAAW,CAAEA,WAAY,CAACC,cAAc,CAAEA,cAAe,CAAE,CAAC,cACpET,IAAA,CAACP,KAAK,EAAC0B,OAAO,CAAET,KAAM,CAAE,CAAC,cACzBR,KAAA,CAACb,MAAM,EAAA0B,QAAA,eACHf,IAAA,CAACZ,KAAK,EAACgC,OAAO,cACdpB,IAAA,CAACT,IAAI,EAAC8B,QAAQ,CAAEV,QAAS,CACzBP,aAAa,CAAEA,aAAc,CAACC,gBAAgB,CAAEA,gBAAiB,CAACE,uBAAuB,CAAEA,uBAAwB,CAClH,CAAE,CAACe,IAAI,CAAC,GAAG,CAAC,CAAC,cACdtB,IAAA,CAACZ,KAAK,EAACkC,IAAI,CAAC,QAAQ,CAACF,OAAO,cAAEpB,IAAA,CAACR,KAAK,EAAC6B,QAAQ,CAAEV,QAAS,CAACF,cAAc,CAAEA,cAAe,CAAE,CAAE,CAAE,CAAC,cAC/FT,IAAA,CAACZ,KAAK,EAACkC,IAAI,CAAC,SAAS,CAACF,OAAO,cAAEpB,IAAA,CAACF,MAAM,EAACU,WAAW,CAAEA,WAAY,CAACa,QAAQ,CAAEV,QAAS,CAAE,CAAE,CAAE,CAAC,EACvF,CAAC,EACE,CAAC,CAEpB,CAEA,cAAe,CAAAR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}