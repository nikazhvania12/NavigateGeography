{"ast":null,"code":"import PackageJSON from'../../../package.json';async function GetCountriesFilter(SetError,name,waterSupplyFrom,resourcesFrom,populationFrom,waterSupplyTo,resourcesTo,populationTo){const model={name,waterSupplyFrom,resourcesFrom,populationFrom,waterSupplyTo,resourcesTo,populationTo};const json=JSON.stringify(model);const url=PackageJSON.API.BaseURL+PackageJSON.API.GetCountriesFilter;try{const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:json});const jsonResp=await response.json();if(response.status===400&&jsonResp!==null&&jsonResp.Error!==null){SetError(jsonResp.Error);}if(!response.ok)return[];return jsonResp;}catch(e){return[];}}export default GetCountriesFilter;","map":{"version":3,"names":["PackageJSON","GetCountriesFilter","SetError","name","waterSupplyFrom","resourcesFrom","populationFrom","waterSupplyTo","resourcesTo","populationTo","model","json","JSON","stringify","url","API","BaseURL","response","fetch","method","headers","body","jsonResp","status","Error","ok","e"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/Controllers/Countries/GetCountriesFilter.jsx"],"sourcesContent":["import PackageJSON from '../../../package.json'\r\n\r\nasync function GetCountriesFilter(SetError, name, waterSupplyFrom, resourcesFrom, populationFrom, waterSupplyTo, resourcesTo, populationTo) {\r\n\r\n    const model = {\r\n        name,\r\n        waterSupplyFrom,\r\n        resourcesFrom,\r\n        populationFrom,\r\n        waterSupplyTo,\r\n        resourcesTo,\r\n        populationTo\r\n    }\r\n\r\n    const json = JSON.stringify(model);\r\n    const url = PackageJSON.API.BaseURL + PackageJSON.API.GetCountriesFilter;\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: json\r\n        })\r\n\r\n        const jsonResp = await response.json();\r\n\r\n        if(response.status === 400 && jsonResp !== null && jsonResp.Error !== null) {\r\n            SetError(jsonResp.Error)\r\n        }\r\n    \r\n        if(!response.ok) \r\n            return [];\r\n    \r\n        return jsonResp;\r\n    }\r\n    catch(e) {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default GetCountriesFilter;"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,uBAAuB,CAE/C,cAAe,CAAAC,kBAAkBA,CAACC,QAAQ,CAAEC,IAAI,CAAEC,eAAe,CAAEC,aAAa,CAAEC,cAAc,CAAEC,aAAa,CAAEC,WAAW,CAAEC,YAAY,CAAE,CAExI,KAAM,CAAAC,KAAK,CAAG,CACVP,IAAI,CACJC,eAAe,CACfC,aAAa,CACbC,cAAc,CACdC,aAAa,CACbC,WAAW,CACXC,YACJ,CAAC,CAED,KAAM,CAAAE,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAClC,KAAM,CAAAI,GAAG,CAAGd,WAAW,CAACe,GAAG,CAACC,OAAO,CAAGhB,WAAW,CAACe,GAAG,CAACd,kBAAkB,CAExE,GAAI,CACA,KAAM,CAAAgB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACJ,GAAG,CAAE,CAC9BK,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEV,IACV,CAAC,CAAC,CAEF,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAAL,QAAQ,CAACN,IAAI,CAAC,CAAC,CAEtC,GAAGM,QAAQ,CAACM,MAAM,GAAK,GAAG,EAAID,QAAQ,GAAK,IAAI,EAAIA,QAAQ,CAACE,KAAK,GAAK,IAAI,CAAE,CACxEtB,QAAQ,CAACoB,QAAQ,CAACE,KAAK,CAAC,CAC5B,CAEA,GAAG,CAACP,QAAQ,CAACQ,EAAE,CACX,MAAO,EAAE,CAEb,MAAO,CAAAH,QAAQ,CACnB,CACA,MAAMI,CAAC,CAAE,CACL,MAAO,EAAE,CACb,CACJ,CAEA,cAAe,CAAAzB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}