{"ast":null,"code":"import PackageJSON from '../../../package.json';\nasync function GetCountriesFilter(SetError, name, waterSupplyFrom, resourcesFrom, populationFrom, waterSupplyTo, resourcesTo, populationTo) {\n  const model = {\n    name,\n    waterSupplyFrom,\n    resourcesFrom,\n    populationFrom,\n    waterSupplyTo,\n    resourcesTo,\n    populationTo\n  };\n  const json = JSON.stringify(model);\n  const url = PackageJSON.API.BaseURL + PackageJSON.API.GetCountriesFilter;\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: json\n    });\n    const json = await response.json();\n    if (response.status === 400 && json && json.Error) SetError(json.Error);\n    if (!response.ok) return [];\n    return json;\n  } catch (e) {\n    console.log(e);\n    return [];\n  }\n}\n_c = GetCountriesFilter;\nexport default GetCountriesFilter;\nvar _c;\n$RefreshReg$(_c, \"GetCountriesFilter\");","map":{"version":3,"names":["PackageJSON","GetCountriesFilter","SetError","name","waterSupplyFrom","resourcesFrom","populationFrom","waterSupplyTo","resourcesTo","populationTo","model","json","JSON","stringify","url","API","BaseURL","response","fetch","method","headers","body","status","Error","ok","e","console","log","_c","$RefreshReg$"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/Controllers/Countries/GetCountriesFilter.jsx"],"sourcesContent":["import PackageJSON from '../../../package.json'\r\n\r\nasync function GetCountriesFilter(SetError, name, waterSupplyFrom, resourcesFrom, populationFrom, waterSupplyTo, resourcesTo, populationTo) {\r\n\r\n    const model = {\r\n        name,\r\n        waterSupplyFrom,\r\n        resourcesFrom,\r\n        populationFrom,\r\n        waterSupplyTo,\r\n        resourcesTo,\r\n        populationTo\r\n    }\r\n\r\n    const json = JSON.stringify(model);\r\n    const url = PackageJSON.API.BaseURL + PackageJSON.API.GetCountriesFilter;\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: json\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        if(response.status === 400 && json && json.Error)\r\n            SetError(json.Error)\r\n    \r\n        if(!response.ok) \r\n            return [];\r\n    \r\n        return json;\r\n    }\r\n    catch(e) {\r\n        console.log(e);\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default GetCountriesFilter;"],"mappings":"AAAA,OAAOA,WAAW,MAAM,uBAAuB;AAE/C,eAAeC,kBAAkBA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,eAAe,EAAEC,aAAa,EAAEC,cAAc,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAE;EAExI,MAAMC,KAAK,GAAG;IACVP,IAAI;IACJC,eAAe;IACfC,aAAa;IACbC,cAAc;IACdC,aAAa;IACbC,WAAW;IACXC;EACJ,CAAC;EAED,MAAME,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;EAClC,MAAMI,GAAG,GAAGd,WAAW,CAACe,GAAG,CAACC,OAAO,GAAGhB,WAAW,CAACe,GAAG,CAACd,kBAAkB;EAExE,IAAI;IACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;MAC9BK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEV;IACV,CAAC,CAAC;IAEF,MAAMA,IAAI,GAAG,MAAMM,QAAQ,CAACN,IAAI,CAAC,CAAC;IAElC,IAAGM,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIX,IAAI,IAAIA,IAAI,CAACY,KAAK,EAC5CrB,QAAQ,CAACS,IAAI,CAACY,KAAK,CAAC;IAExB,IAAG,CAACN,QAAQ,CAACO,EAAE,EACX,OAAO,EAAE;IAEb,OAAOb,IAAI;EACf,CAAC,CACD,OAAMc,CAAC,EAAE;IACLC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,OAAO,EAAE;EACb;AACJ;AAACG,EAAA,GAtCc3B,kBAAkB;AAwCjC,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}