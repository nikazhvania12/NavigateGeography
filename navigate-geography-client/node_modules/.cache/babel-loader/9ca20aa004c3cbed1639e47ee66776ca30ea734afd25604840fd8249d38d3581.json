{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nzhvania\\\\Desktop\\\\navigate-geography\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Header from './Components/HelperComponents/Header';\nimport Home from './Components/RouteComponents/Home';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [viewCountries, setViewCountries] = useState(null);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(FullSizeMap, {\n      isVisible: isVisible,\n      selectedCountries: viewCountries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          viewCountries: viewCountries,\n          setViewCountries: setViewCountries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this),\n        path: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"plX30tqTLRF3vXWincT7GbYKkV8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Route","Routes","Header","Home","useState","jsxDEV","_jsxDEV","App","_s","viewCountries","setViewCountries","children","FullSizeMap","isVisible","selectedCountries","fileName","_jsxFileName","lineNumber","columnNumber","element","path","_c","$RefreshReg$"],"sources":["C:/Users/nzhvania/Desktop/navigate-geography/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'; \n\nimport Header from './Components/HelperComponents/Header';\nimport Home from './Components/RouteComponents/Home';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [viewCountries, setViewCountries] = useState(null);\n\n  \n  return (\n    <BrowserRouter>\n      <FullSizeMap isVisible={isVisible} selectedCountries={viewCountries} />\n        <Header />\n        <Routes>\n            <Route element={<Home viewCountries={viewCountries} setViewCountries={setViewCountries} />} path='/'/>\n        </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAO,0CAA0C;AAEjD,SAASA,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAE/D,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,IAAI,MAAM,mCAAmC;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAGxD,oBACEE,OAAA,CAACP,aAAa;IAAAY,QAAA,gBACZL,OAAA,CAACM,WAAW;MAACC,SAAS,EAAEA,SAAU;MAACC,iBAAiB,EAAEL;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEZ,OAAA,CAACJ,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVZ,OAAA,CAACL,MAAM;MAAAU,QAAA,eACHL,OAAA,CAACN,KAAK;QAACmB,OAAO,eAAEb,OAAA,CAACH,IAAI;UAACM,aAAa,EAAEA,aAAc;UAACC,gBAAgB,EAAEA;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACE,IAAI,EAAC;MAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB;AAACV,EAAA,CAdQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}